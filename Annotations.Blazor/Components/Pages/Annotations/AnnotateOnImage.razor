@* @page "/images/{imageid}/annotations" *@
@rendermode InteractiveServer
@page "/images/annotations"
@implements IDisposable
@inject NavigationManager Navigation

<PageTitle>Annotations</PageTitle>

<MatThemeProvider Theme="@theme">
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                <div style="display: flex; align-items: center; gap: 20px;">
                    <img src="img/billede1.png" alt="Profile Picture" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover;">
                    <div>
                        <b style="margin: 0;">Jane Doe</b>
                        <br/>
                        <small style="margin: 0;">Surgeon</small>
                    </div>
                </div>
                <div style="margin-top: 50px">
                    <MatCheckbox @bind-Value="@arteriesMarked">Arteries marked</MatCheckbox>
                </div>
                <div>
                    <MatCheckbox @bind-Value="@veinsMarked">Veins marked</MatCheckbox>
                </div>
                <div>
                    <MatCheckbox @bind-Value="@flowDirectionSet">Flow direction set</MatCheckbox>
                </div>
                <div>
                    <MatCheckbox @bind-Value="@videoReviewed">Video reviewed</MatCheckbox>
                </div>
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-10">
                <div class="mat-layout-grid-inner">
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                        <div style="display: flex; justify-content: flex-start; gap: 8px;">
                            <MatTabGroup>
                                <MatTab Label="Vessels">
                                    <div style="padding: 16px;">
                                        <b>Blood Vessel Identification</b>
                                        <br/>
                                        Mark blood vessels, directions, thickness and connectivity
                                    </div>
                                </MatTab>
                                <MatTab Label="Flow">
                                    <div style="padding: 16px;">
                                        <b>Blood Flow Identification</b>
                                        <br/>
                                        Which direction the blood is flowing; flow analysis tools, with various graphs and visualizations that can be used to determine the blood direction.
                                    </div>
                                </MatTab>
                                <MatTab Label="Organs">
                                    <div style="padding: 16px;">
                                        <b>Organ Identification</b>
                                        <br/>
                                        Annotation of organs in the image. white light image instead of sum-map (as shown), possibility to select organs from a list, "semantic segmentation" correction, "best guess" functionality.
                                    </div>
                                </MatTab>
                            </MatTabGroup>
                        </div>
                    </div>
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-9 mat-layout-grid-align-right" style="display: flex; margin-left: auto; gap: 8px;">
                        <div style="display: flex; justify-content: flex-end; gap: 8px;">
                            <MatButton>Skip</MatButton>
                            <MatButton Style=" color: white; background: #101e2d">Complete</MatButton>
                        </div>
                    </div>    
                </div>
                <div style="position: relative;" @ref="imageContainer">
                    <img src="img/SkÃ¦rmbillede%202025-03-27%20kl.%2014.05.56.png"
                         @onclick="HandleImageClick"
                         style="width: 1000px; height: 600px;" />

                    @if (showTextField)
                    {
                        <div style="position: absolute; left: @($"{clickX}px"); top: @($"{clickY}px")">
                            <p>
                                <MatTextField @bind-Value="annotationText" Label="Annotation" TextArea="true"/>
                            </p>
                            <p>
                                <MatTextField @bind-Value="annotationType" Label="Type"></MatTextField>
                            </p>
                            
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</MatThemeProvider>


@code {
    private string? currentUrl;
    private bool arteriesMarked;
    private bool veinsMarked;
    private bool flowDirectionSet;
    private bool videoReviewed;
    
    private ElementReference imageContainer;
    private bool showTextField = false;
    private int clickX, clickY;
    private string annotationText = "";
    private string annotationType = "";
    
    MatTheme theme = new MatTheme()
    {
        Primary = MatThemeColors.Green._800.Value
    };
    
    private async Task HandleImageClick(MouseEventArgs e)
    {
        // Get container position
        var containerRect = await JSRuntime.InvokeAsync<BoundingClientRect>(
            "getBoundingClientRect", 
            imageContainer
        );

        // Calculate relative coordinates
        clickX = (int)(e.ClientX - containerRect.Left);
        clickY = (int)(e.ClientY - containerRect.Top);
        
        showTextField = true;
    }

    [Inject] private IJSRuntime JSRuntime { get; set; }

    // JS-interop compatible struct
    private struct BoundingClientRect
    {
        public double Left { get; set; }
        public double Top { get; set; }
    }
    
    protected override void OnInitialized()
    {
        currentUrl = Navigation.Uri;
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = Navigation.Uri;
        StateHasChanged();
    }

    public void Dispose() => Navigation.LocationChanged -= OnLocationChanged;
}
