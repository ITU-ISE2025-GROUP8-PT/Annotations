@page "/ApiAccess"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using System.Text.Json;
@inject IHttpClientFactory ClientFactory
@inject IHttpContextAccessor httpContextAccessor
@attribute [Authorize]

<PageTitle>ApiAccesse</PageTitle>

<h1>API Access test</h1>

@if (story == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var word in story)
        {
            <li>@word</li>
        }
    </ul>
}


@code {
    private string[]? story;

    protected override async Task OnInitializedAsync()
    {
        var httpContext = httpContextAccessor.HttpContext ?? throw new InvalidOperationException("No HttpContext available");

        var accessToken = await httpContext.GetTokenAsync("access_token") ?? throw new InvalidOperationException("No access_token was saved");

        var client = ClientFactory.CreateClient();
        client.BaseAddress = new("https://localhost:7250");

        using var requestMessage = new HttpRequestMessage(HttpMethod.Get, "/images/apitest");
        requestMessage.Headers.Authorization = new("Bearer", accessToken);

        using var response = await client.SendAsync(requestMessage);

        
        try
        {
            story = await response.Content.ReadFromJsonAsync<string[]>();
        }
        catch (Exception e)
        {
            Console.WriteLine("Status code: " + response.StatusCode);
            story = new string[1];
            story[0] = response.StatusCode.ToString();
        }
        

    }

}
