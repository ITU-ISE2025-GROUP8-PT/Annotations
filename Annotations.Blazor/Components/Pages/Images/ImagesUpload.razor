@page "/images/upload"
@using global::Annotations.Blazor.ImageServices
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Administrator, Manager")]
@inject IImageUploader ImageUploader

<h1>Upload New Images</h1>

<MatFileUpload OnChange="@MultipleFilesReady" AllowMultiple="true" Label="Drop files here or Browse"></MatFileUpload>

<ul>
    @foreach (var f in _multiplelist)
    {
        <li>@f</li>
    }
</ul>

<MatButton OnClick="@UploadAsSingleImages" Label="Upload single images"></MatButton>

<MatButton OnClick="@UploadAsImageSeries" Label="Upload as image series"></MatButton>

@if (_imageIDs.Count > 0)
{
    <h2>Uploaded Images: @_imageIDs.Count</h2>
    
    <ul>
        @foreach (var f in _imageIDs)
        {
            <li>@f</li>
        }
    </ul>
}


@code
{
    private List<string> _multiplelist = [];
    private IMatFileUploadEntry[] _filesList = [];
    private IList<string> _imageIDs = [];

    void MultipleFilesReady(IMatFileUploadEntry[] files)
    {
        _filesList = files;
        foreach (var file in files)
        {
            _multiplelist.Add($"Name: {file.Name} - Size: {file.Size}");
        }
    }

    async void UploadAsSingleImages()
    {
        _imageIDs = await ImageUploader.UploadImagesAsync(_filesList);
    }

    void UploadAsImageSeries()
    {
        
    }
}
