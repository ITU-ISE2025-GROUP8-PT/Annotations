@using MatBlazor
@using Microsoft.AspNetCore.Authentication
@page "/images/filter/category"
@using global::Annotations.Core.Models
@using Microsoft.AspNetCore.Authentication
@inject IHttpClientFactory ClientFactory
@inject IHttpContextAccessor httpContextAccessor


@if (story == null)
{
    <p><em>Loading...</em></p>
}
else
{
    foreach (string word in story)
    {
        <img src="data:image;base64, @word" />

    }
}
@code{

    private string[]? story;
    private string[] test;

    protected override async Task OnInitializedAsync()
    {
        var httpContext = httpContextAccessor.HttpContext ?? throw new InvalidOperationException("No HttpContext available");

        var accessToken = await httpContext.GetTokenAsync("access_token") ?? throw new InvalidOperationException("No access_token was saved");

        var client = ClientFactory.CreateClient();
        client.BaseAddress = new("https://localhost:7250");

        using var requestMessage = new HttpRequestMessage(HttpMethod.Get, "/images/filter/category");
        requestMessage.Headers.Authorization = new("Bearer", accessToken);

        using var response = await client.SendAsync(requestMessage);
        try
        {
            string[] answer = await response.Content.ReadFromJsonAsync<string[]>();
            story = new string[answer.Length];
            for (int i = 0; i < answer.Length; i++)
            {
                var personObject = System.Text.Json.JsonSerializer.Deserialize<ImageModel>(answer[i]);
                var imageData = personObject.ImageData;
                story[i] = System.Convert.ToBase64String(imageData);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Status code: " + response.StatusCode);
            story = new string[1];
            story[0] = response.StatusCode.ToString();
        }
        /*foreach (string jsonString in array)
        {
            var personObject = System.Text.Json.JsonSerializer.Deserialize<ImageModel>(jsonString);
            var imageData = personObject.ImageData;
            story.Add(System.Convert.ToBase64String(imageData));
        }*/  

    }

}