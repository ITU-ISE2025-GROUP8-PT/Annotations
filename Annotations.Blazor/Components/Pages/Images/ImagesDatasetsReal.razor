@page "/images/datasets"
@using Microsoft.AspNetCore.Authentication

@inject IHttpClientFactory ClientFactory
@inject IHttpContextAccessor httpContextAccessor
<style>
    .container {
        display: flex;
        flex-direction: column;
    }
    .datasetContainers {
        background-color: #e3e7ee;
        padding-top: 0.8%;
        padding-bottom: 0.3%;
        padding-left: 1%;
        margin-bottom: 1%;
        margin-top: 1%;
        border-radius: 10px 10px 10px 10px;
    }
    .DivToScroll{
        background-color: #F5F5F5;
        border: 1px solid #DDDDDD;
        border-radius: 4px 0 4px 0;
        color: #3B3C3E;
        left: -1px;
        max-height: 100vh;
        overflow-x:hidden;
        padding: 1.5%;
        scrollbar-width: auto;
        max-width: 67vw;
    }
    .filterButton {
        border: 5px;
        cursor: pointer;
        background-color: transparent;
        font-size: 130%;
        text-align: center;
        margin-top:20%;
        margin-left: 10%;
        text-decoration: underline;
    }
    .ordering{
        margin-left: 10%;
        text-decoration: underline;
        font-size: 130%;
    }
    .textForDatasetsA{
        padding:0; 
        margin: 0; 
        width: 80%;
    }
    .textForDatasetsB {
        padding:0; 
        margin: 0; 
        width: 21%
    }

</style>
<div style=" display: flex; flex-direction:row;">

    <span style="margin-left:13%; margin-top:0.0001%; padding-bottom:2%; font-weight: bold; width: 72%; font-size: 215%">Manage datasets</span>
    <div style="width:15%">
        <button class="filterButton">Order by...</button>
    </div>

</div>
<div class = "container DivToScroll">
    @foreach (var name in datasets)
    {
        <div class="datasetContainers">
            <div style=" display: flex; flex-direction:row; flex-wrap: nowrap">
                <span class = "textForDatasetsA" style="font-weight: bold">Dataset @name</span>
                <span class = "textForDatasetsB">Annotated by: 1 person</span>
            </div>
            <div style=" display: flex; flex-direction:row; flex-wrap: nowrap">
                <span class = "textForDatasetsA">Number of images: 3</span>
                <span class = "textForDatasetsB">Reviewed by: 1 person</span>
            </div>
            <div style=" display: flex; flex-direction:row; flex-wrap: nowrap">
                <span style="padding:0; margin: 0;  width: 95.5%;">Category: "?"</span>
                <a href="https://localhost:7238/images/datasets/@name"><img src="https://www.svgrepo.com/download/64793/inverted-triangle.svg" alt="small black arrow pointing downwards" style="max-height: 30px; width:auto; margin-top: 0.1%; margin-bottom: 0.0001%">
                </a>
            </div>
        </div>
    }
</div>





@code{
    public List<int>? datasets = new List<int>();
    private bool error = false;

    protected override async Task OnInitializedAsync()
    {
        var httpContext = httpContextAccessor.HttpContext ?? throw new InvalidOperationException("No HttpContext available");

        var accessToken = await httpContext.GetTokenAsync("access_token") ?? throw new InvalidOperationException("No access_token was saved");

        var client = ClientFactory.CreateClient();
        client.BaseAddress = new("https://localhost:7250");

        using var requestMessage = new HttpRequestMessage(HttpMethod.Get, $"/images/datasets");
        requestMessage.Headers.Authorization = new("Bearer", accessToken);

        using var response = await client.SendAsync(requestMessage);
        try
        {
            var something = await response.Content.ReadFromJsonAsync<int[]>();
            for (int i = 0; i < something.Length; i++)
            {
                datasets.Add(something[i]);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Status code: " + response.StatusCode);
            error = true;
        }

    }

}